int numberofGasStationRequired(long double dist, vector<int> &arr){
	int cnt=0;
	for(int i=1;i<arr.size();i++){
		long double gap= arr[i]-arr[i-1];
		int numberInBetween=ceil(gap/dist)-1;
		cnt+=numberInBetween;
	}return cnt;
}



double minimiseMaxDistance(vector<int> &arr, int k){
	int n=arr.size();
	long double low=0, high= 0;
	for(int i=0;i<n;i++){
		high=max(high,(long double)(arr[i]-arr[i-1]));
	}long double diff= 1e-6;
	while(high-low>diff){
		long double mid=(low+high)/2.0;
		int cnt= numberofGasStationRequired(mid,arr);
		if(cnt>k){
			low=mid;
		}else{
			high=mid;
		}
	}return high;
}
